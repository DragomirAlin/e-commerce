# Default values for ecommerce.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: { }
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

istio:
  enabled: true
  gateway: ingressgateway
  protocol: https
  hosts:
    - host: "chart-example.local"
  security:
    enabled: false
    credentialName: ""
    commonName: ""
    hosts:
      - "chart-example.local"

appConfig:
  spring:
    name: "ecommerce"

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        postgresPassword: 1234
  architecture: replication
  replication:
    password: 1234

keycloak:
  istio:
    enabled: true
    gateway: ingressgateway
    protocol: https
    hosts:
      - host: "chart-example.local"
    security:
      enabled: false
      credentialName: ""
      commonName: ""
      hosts:
        - "chart-example.local"
  enabled: true
  replicas: 3
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    rules:
      - host: keycloak.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - keycloak.example.com
        secretName: keycloak.example.com-tls
    console:
      enabled: true
      annotations:
        cert-manager.io/issuer: letsencrypt-prod
      rules:
        - host: keycloak.example.com
          paths:
            - path: /auth/admin/
              pathType: Prefix
      tls:
        - hosts:
            - keycloak.example.com
          secretName: keycloak.example.com-tls

  postgresql:
    enabled: false
    postgresqlUsername: keycloak
    postgresqlPassword: 1234
    postgresqlDatabase: keycloak

  service:
    type: NodePort

  rbac:
    create: true
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list

  extraEnv: |
    - name: JGROUPS_DISCOVERY_PROTOCOL
      value: kubernetes.KUBE_PING
    - name: KUBERNETES_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: CACHE_OWNERS_COUNT
      value: "3"
    - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
      value: "3"
    - name: DB_VENDOR
      value: postgres
    - name: DB_ADDR
      value: ecommerce-postgresql-primary
    - name: DB_PORT
      value: "5432"
    - name: DB_DATABASE
      value: "keycloak"
    - name: DB_USER
      value: "keycloak"
    - name: DB_PASSWORD 
      value: "1234"
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_USER
      value: "admin" 
    - name: KEYCLOAK_PASSWORD
      value: "1234"
    - name: KEYCLOAK_FRONTEND_URL
      value: "http://keycloak.example.com/auth/"
    - name: JAVA_OPTS_APPEND
      value: "-Dkeycloak.adminUrl=http://keycloak.example.com/auth/"
