# Ecommerce Chart Configuration
replicaCount: 1

image:
  repository: dragomiralin/ecommerce-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: { }
  name: ""

podAnnotations: { }

podSecurityContext: { }

securityContext: { }

service:
  type: ClusterIP
  port: 8080
  health:
    port: 8081
ingress:
  enabled: false

resources: { }

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

istio:
  enabled: true
  gateway: ingressgateway
  protocol: https
  hosts:
    - host: "api.yourdomain"
  security:
    enabled: true
    credentialName: "cert-api.yourdomain"
    commonName: "api.yourdomain"
    hosts:
      - "api.yourdomain"

spring:
  application:
    name: e-commerce
  datasource:
    url: jdbc:postgresql://ecommerce-postgresql-primary:5432/ecommercedb
    username: ecommerce
    password: 1234
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: postgres
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://keycloak.yourdomain/auth/realms/master
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:
  data:
    redis:
      host: ecommerce-redis-master
      password: 1234
management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: "*" # openapi, swagger-ui
  prometheus:
    metrics:
      export:
        enabled: true
springdoc:
  use-management-port: true
  show-actuator: true
  enable-spring-security: true
ecommerce:
  mail:
    from:
  storage:
    s3:
      access-key:
      secret-key:
      bucket-name:
      region:
      endpoint:

# Redis Chart Configuration
redis:
  enabled: true
  auth:
    password:

# PostgreSQL Chart Configuration
postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        postgresPassword: 1234
  architecture: replication
  replication:
    password: 1234
  initdbScripts:
    00_create_db_keycloak.sql: |
      create database IF NOT EXISTS keycloak;
      create user keycloak with encrypted password '1234';
      grant all privileges on database keycloak to keycloak;
    01_create_db_ecommerce.sql: |
      create database IF NOT EXISTS ecommercedb;
      create user ecommerce with encrypted password '1234';
      grant all privileges on database ecommercedb to ecommerce;
  initdbUser: postgres
  initdbPassword: 1234

# Keycloak Chart Configuration
keycloak:
  enabled: true
  replicas: 3
  postgresql:
    enabled: false
  service:
    type: NodePort
  rbac:
    create: true
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
  extraEnv: |
    - name: JGROUPS_DISCOVERY_PROTOCOL
      value: kubernetes.KUBE_PING
    - name: KUBERNETES_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: CACHE_OWNERS_COUNT
      value: "3"
    - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
      value: "3"
    - name: DB_VENDOR
      value: postgres
    - name: DB_ADDR
      value: ecommerce-postgresql-primary
    - name: DB_PORT
      value: "5432"
    - name: DB_DATABASE
      value: "keycloak"
    - name: DB_USER
      value: "keycloak"
    - name: DB_PASSWORD 
      value: "1234"
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_USER
      value: "admin" 
    - name: KEYCLOAK_PASSWORD
      value: "1234"
    - name: KEYCLOAK_FRONTEND_URL
      value: "https://keycloak.yourdomain/auth/"
    - name: JAVA_OPTS_APPEND
      value: "-Dkeycloak.adminUrl=https://keycloak.yourdomain/auth/"

  istio:
    enabled: true
    gateway: ingressgateway
    protocol: https
    hosts:
      - host: "keycloak.yourdomain"
    security:
      enabled: true
      credentialName: "cert-keycloak.yourdomain"
      commonName: "keycloak.yourdomain"
      hosts:
        - "keycloak.yourdomain"